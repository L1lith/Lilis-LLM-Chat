name: Build/release

on: push


jobs:
  release:
    runs-on: ${{ matrix.os }}    
    env:
      DEBUG: electron-builder
    timeout-minutes: 20
    permissions:
      contents: write
      packages: write
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Check package version against latest release
        id: check_version
        run: |
          LATEST_RELEASE_VERSION=$(curl -sL "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r .tag_name | sed 's/^v//')
          PACKAGE_VERSION=$(jq -r .version package.json)

          if [ "$LATEST_RELEASE_VERSION" == "$PACKAGE_VERSION" ]; then
            echo "SKIPPING_BUILD=true" >> "$GITHUB_ENV"
          fi
        shell: bash

      - name: Install Node.js, NPM and Yarn
        if: env.SKIPPING_BUILD != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        if: env.SKIPPING_BUILD != 'true'
        run: npm install

      - name: Build web app and prepare Electron app
        if: env.SKIPPING_BUILD != 'true'
        run: npm run build:web && node prepareElectronApp.js

      - name: Build and release Electron app (macOS)
        if: env.SKIPPING_BUILD != 'true' && matrix.os == 'macos-latest'
        run: npm exec electron-builder -- --mac --publish always
        env:
          GH_TOKEN: ${{ secrets.github_token }}

      - name: Build and release Electron app (Linux)
        if: env.SKIPPING_BUILD != 'true' && matrix.os == 'ubuntu-latest'
        run: npm exec electron-builder -- --linux --publish always
        env:
          GH_TOKEN: ${{ secrets.github_token }}

      - name: Build and release Electron app (Windows)
        if: env.SKIPPING_BUILD != 'true' && matrix.os == 'windows-latest'
        run: npm exec electron-builder -- --win --publish=always
        env:
          GH_TOKEN: ${{ secrets.github_token }}